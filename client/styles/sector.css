body > header {
    position: sticky;
    top: 0;
    background-color: var(--pico-background-color);
}

.full-height {
    max-height: none;
}

.card-header h3 {
    margin-bottom: 0;
}

.section-header {
    display: flex;

    span[role="button"] {
        margin-top: calc(var(--pico-spacing) * 0.125);
        margin-left: calc(var(--pico-spacing) * 0.25);
    }
}

.icon-row {
    display: flex;
    flex-direction: row;
    align-items: center;

    span.material-symbols-outlined {
        margin-left: calc(var(--pico-spacing) * 0.25);
    }
}

.error-indicator {
    height: 100%;
}

.option-table, .form-table {
    margin-bottom: 0;
}
.option-table {
    div:has(> :is(span.material-symbols-outlined, input[type="radio"])) {
        display: flex;
        justify-content: center;
    }
    span.material-symbols-outlined {
        cursor: default;
    }
    input[type="radio"] {
        margin: 0;

        &:checked:not(&[data-initial]) {
            --pico-border-color: var(--pico-mod);
            --pico-primary-focus: color-mix(in hsl, var(--pico-border-color), transparent 37.5%);
        }

        &[data-initial]:not(:checked) {
            border: var(--pico-border-width) dashed var(--pico-secondary-background);
        }
    }
    th:has(> kbd:only-child) {
        text-align: center;
    }
    th > kbd:only-child {
        border-bottom: none;
    }
}
.form-table {
    input, select, details {
        margin-bottom: 0;
    }
    thead, tfoot {
        z-index: 1;
    }
}
.table-container {
    max-height: calc(100svh - 12rem);
}
#parcel-modal td:has(.icon-button-container) {
    padding-left: calc(var(--pico-spacing) / 2);
}
#parcel-modal .indicator + td {
    padding-right: calc(var(--pico-spacing) / 2);
}
#supervisor-modal tr:has([data-initial]:not(:checked)) {
    th span {
        color: var(--pico-mod-color);
        font-style: italic;
        font-weight: bolder;

        &::after {
            content: '*';
        }
    }
    summary {
        --pico-form-element-active-border-color: var(--pico-mod-border-color);
        --pico-form-element-focus-color: var(--pico-mod-border-color);
        select {
            color: var(--pico-mod-color);
            font-style: italic;
            font-weight: bolder;
        }
        kbd {
            background-color: var(--pico-mod-kbd-color);
            color: var(--pico-contrast-inverse);
        }
    }
}
#supervisor-modal details label:has([data-initial]) {
    color: var(--pico-form-element-placeholder-color);
    kbd {
        background-color: var(--pico-muted-color);
    }
}

.notice {
    font-style: italic;
}
.notice, .index {
    transition: color var(--pico-transition);
}
.modified {
    select, .index {
        color: var(--pico-mod-color);
        font-weight: bolder;
        font-style: italic;
    }
    select * {
        color: var(--pico-color);
        font-weight: var(--pico-font-weight);
        font-style: normal;
    }
    select:not([aria-invalid]) {
        --pico-form-element-active-border-color: var(--pico-mod-border-color);
        --pico-form-element-focus-color: var(--pico-mod-border-color);
    }
    .notice {
        color: var(--pico-muted-color);
        text-decoration: line-through;
    }
}
.deleted {
    select, .index {
        color: var(--pico-muted-color);
        font-style: italic;
    }
    select {
        text-decoration: line-through;
    }
    .notice {
        color: var(--pico-del-color);
        font-weight: bolder;
    }
}
.inserted {
    select, .index {
        color: var(--pico-ins-color);
        font-weight: bolder;
        font-style: italic;
    }
    select * {
        color: var(--pico-color);
        font-weight: var(--pico-font-weight);
        font-style: normal;
    }
    select:not(tr[aria-invalid] select) {
        --pico-form-element-active-border-color: var(--pico-form-element-valid-border-color);
        --pico-form-element-focus-color: var(--pico-form-element-valid-focus-color);
    }
    .notice {
        color: var(--pico-ins-color);
        font-weight: bolder;
    }
    .index {
        padding-left: calc(var(--pico-spacing) / 2);
        input {
            padding: var(--pico-form-element-spacing-vertical) calc(var(--pico-spacing) / 2);
            max-width: calc(2 * var(--pico-border-width) + var(--pico-spacing) + 4ch);
        }
        input[aria-invalid] {
            padding: var(--pico-form-element-spacing-vertical) calc(var(--pico-spacing) / 2) !important;
            background-image: none;
        }
    }
}

[aria-invalid="true"] {
    .index:not(.inserted .index), &.inserted input {
        color: var(--pico-form-element-invalid-border-color);
        font-weight: bolder;
    }
    select:not(:is(.inserted, .deleted) select), .notice:is(.deleted .notice) {
        color: var(--pico-form-element-invalid-border-color);
    }
    &.inserted :is(.notice, select) {
        color: var(--pico-muted-color);
        font-weight: var(--pico-font-weight);
    }
    [data-tooltip]::before {
        font-weight: 600;
    }
}

#sector-col {
    padding-left: calc(var(--pico-spacing) + var(--pico-form-element-spacing-horizontal));
}
