@import url('@picocss/pico/css/pico.css');
@import url('@picocss/pico/css/pico.colors.css');
@import url('material-symbols/outlined.css');

.material-symbols-outlined {
    font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
}

.full-height {
    min-height: 100svh;
    max-height: 100svh;
}

.vert-flex {
    display: flex;
    flex-direction: column;
}

.stretch {
    flex-grow: 1;
}

.code-block {
    font-family: monospace;
}

.current-page {
    text-decoration: none !important;
}

.icon-button {
    padding: 0 !important;
    border: none;
}

.muted {
    color: var(--pico-muted-color);
}

.no-data {
    text-align: center;
}

.tag-cell {
    display: flex;
    flex-direction: row;
    align-items: center;

    table & {
        display: flex !important;
    }

    & kbd {
        padding: 0 0.25rem;
        margin-right: 0.375rem;
    }
}

.danger {
    --pico-background-color: var(--pico-color-red-600);
    --pico-border-color: var(--pico-color-red-600);
    --pico-primary-focus: color-mix(in hsl, var(--pico-border-color), transparent 37.5%);
}

.danger:is(:hover,:active,:focus) {
    --pico-background-color: var(--pico-color-red-550);
    --pico-border-color: var(--pico-color-red-550);
}

.material-symbols-outlined[role="button"] {
    :is(th, td):has(&) {
        direction: rtl;
    }
}

kbd.secondary {
    background-color: var(--pico-secondary-background);
}

::placeholder {
    font-style: italic;
}

/* Tag picker */
.dropdown.tag-picker li:has(.tag-cell) {
    padding: 0;
    margin: 0;
    & .tag-cell {
        margin-bottom: 0;
        padding: calc(var(--pico-form-element-spacing-vertical) * 0.5) var(--pico-form-element-spacing-horizontal);
    }
    & .tag-cell:hover {
        color: var(--pico-form-element-color);
    }
}
.dropdown.tag-picker ul {
    padding: calc(var(--pico-form-element-spacing-vertical) * 0.5) 0;
}
.dropdown.tag-picker select {
    padding: 0;
    margin: 0;
    border: none;
    pointer-events: none;
    background: none;
}

table {
    thead, tfoot {
        position: sticky;
    }
    thead {
        inset-block-start: 0; /* "top" */
    }
    tfoot {
        inset-block-end: 0; /* "bottom" */
    }
    span {
        display: table-cell !important;
    }
}

/* fucking firefox */
@-moz-document url-prefix() {
table:has(.no-data) {
    :is(thead, tfoot):not(:empty) {
        height: 1em;
    }
    tbody {
        bottom: 0;
    }
}
}
